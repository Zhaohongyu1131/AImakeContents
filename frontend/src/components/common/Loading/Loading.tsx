/**\n * Loading Component\n * 加载组件 - [components][common][loading]\n */\n\nimport React from 'react';\nimport { Spin, SpinProps } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\ninterface LoadingProps extends Omit<SpinProps, 'indicator'> {\n  text?: string;\n  overlay?: boolean;\n  centered?: boolean;\n  fullPage?: boolean;\n  iconSize?: number;\n  variant?: 'default' | 'dots' | 'pulse' | 'spinner';\n}\n\nexport const Loading: React.FC<LoadingProps> = ({\n  text = '加载中...',\n  overlay = false,\n  centered = false,\n  fullPage = false,\n  iconSize = 24,\n  variant = 'default',\n  className,\n  children,\n  ...props\n}) => {\n  const getIndicator = () => {\n    switch (variant) {\n      case 'spinner':\n        return <LoadingOutlined style={{ fontSize: iconSize }} spin />;\n      case 'dots':\n        return (\n          <div className=\"loading-dots\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        );\n      case 'pulse':\n        return (\n          <div className=\"loading-pulse\">\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        );\n      default:\n        return <LoadingOutlined style={{ fontSize: iconSize }} spin />;\n    }\n  };\n\n  const getWrapperClass = () => {\n    return classNames(\n      'loading-wrapper',\n      {\n        'loading-overlay': overlay,\n        'loading-centered': centered,\n        'loading-full-page': fullPage,\n      },\n      className\n    );\n  };\n\n  if (fullPage) {\n    return (\n      <div className={getWrapperClass()}>\n        <Spin\n          {...props}\n          indicator={getIndicator()}\n          tip={text}\n          size=\"large\"\n        />\n      </div>\n    );\n  }\n\n  if (overlay) {\n    return (\n      <div className=\"loading-container\">\n        {children}\n        <div className={getWrapperClass()}>\n          <Spin\n            {...props}\n            indicator={getIndicator()}\n            tip={text}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={getWrapperClass()}>\n      <Spin\n        {...props}\n        indicator={getIndicator()}\n        tip={text}\n      >\n        {children}\n      </Spin>\n    </div>\n  );\n};\n\nexport default Loading;"