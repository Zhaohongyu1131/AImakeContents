/**\n * Custom Modal Component\n * 自定义模态框组件 - [components][common][modal]\n */\n\nimport React from 'react';\nimport { Modal as AntdModal, ModalProps as AntdModalProps, Button, Space } from 'antd';\nimport { CloseOutlined, CheckOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\ninterface CustomModalProps extends Omit<AntdModalProps, 'footer'> {\n  variant?: 'default' | 'confirm' | 'info' | 'warning' | 'error';\n  size?: 'small' | 'medium' | 'large' | 'fullscreen';\n  showFooter?: boolean;\n  confirmText?: string;\n  cancelText?: string;\n  confirmLoading?: boolean;\n  onConfirm?: () => void | Promise<void>;\n  onCancel?: () => void;\n  customFooter?: React.ReactNode;\n  borderless?: boolean;\n}\n\nexport const Modal: React.FC<CustomModalProps> = ({\n  children,\n  variant = 'default',\n  size = 'medium',\n  showFooter = true,\n  confirmText = '确定',\n  cancelText = '取消',\n  confirmLoading = false,\n  onConfirm,\n  onCancel,\n  customFooter,\n  borderless = false,\n  className,\n  ...props\n}) => {\n  const getModalClass = () => {\n    const classes = {\n      'modal-confirm': variant === 'confirm',\n      'modal-info': variant === 'info',\n      'modal-warning': variant === 'warning',\n      'modal-error': variant === 'error',\n      'modal-small': size === 'small',\n      'modal-large': size === 'large',\n      'modal-fullscreen': size === 'fullscreen',\n      'modal-borderless': borderless,\n    };\n    \n    return classNames('custom-modal', classes, className);\n  };\n\n  const getModalWidth = () => {\n    switch (size) {\n      case 'small':\n        return 400;\n      case 'medium':\n        return 600;\n      case 'large':\n        return 800;\n      case 'fullscreen':\n        return '100vw';\n      default:\n        return 600;\n    }\n  };\n\n  const getVariantIcon = () => {\n    switch (variant) {\n      case 'confirm':\n        return <CheckOutlined />;\n      case 'warning':\n      case 'error':\n        return <ExclamationCircleOutlined />;\n      default:\n        return null;\n    }\n  };\n\n  const renderFooter = () => {\n    if (!showFooter) {\n      return null;\n    }\n\n    if (customFooter) {\n      return customFooter;\n    }\n\n    return (\n      <Space>\n        <Button onClick={onCancel}>\n          <CloseOutlined />\n          {cancelText}\n        </Button>\n        <Button\n          type=\"primary\"\n          loading={confirmLoading}\n          onClick={onConfirm}\n        >\n          {getVariantIcon()}\n          {confirmText}\n        </Button>\n      </Space>\n    );\n  };\n\n  return (\n    <AntdModal\n      {...props}\n      className={getModalClass()}\n      width={getModalWidth()}\n      footer={renderFooter()}\n      onCancel={onCancel}\n      centered={size !== 'fullscreen'}\n      mask={size !== 'fullscreen'}\n      maskClosable={variant === 'default'}\n      keyboard={variant === 'default'}\n    >\n      {children}\n    </AntdModal>\n  );\n};\n\nexport default Modal;"